import random
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "–¢–û–ö–ï–ù_–¢–í–û–ï–ì–û_–ë–û–¢–ê"

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# --- 8ball –æ—Ç–≤–µ—Ç—ã ---
answers = [
    "–î–∞ ‚úÖ", "–ù–µ—Ç ‚ùå", "–í–æ–∑–º–æ–∂–Ω–æ ü§î", "–õ—É—á—à–µ –Ω–µ –Ω–∞–¥–æ üòÖ",
    "–°—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ üíØ", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ ‚è≥", "–Ø –±—ã –Ω–µ —Ä–∏—Å–∫–æ–≤–∞–ª üö´"
]

# --- –ù–∏–∫–Ω–µ–π–º—ã ---
nicknames = [
    "–°—ã—Ä–Ω—ã–π –ë–∞—Ä–æ–Ω üßÄ", "–ö–æ–ª–±–∞—Å–Ω—ã–π –õ–æ—Ä–¥ üå≠", "–ö–æ—Ç—è—Ä–∞ 3000 üê±",
    "–ú–∞–≥ –ü–æ–¥—Ç—è–∂–µ–∫ üßô", "–≠–ª—å—Ñ –õ–∞—Ä—å–∫–∞ üßù", "–û—Ä—ë–ª-–æ–±–æ—Å—Ä–∞–ª ü¶Ö"
]

# --- –†–µ–ø—É—Ç–∞—Ü–∏—è ---
reputation = {}

# --- –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–ª–æ–≤–∞ ---
reactions = {
    "–ø–∏–≤–æ": "–ê –≥–¥–µ –º–æ—ë?! üç∫",
    "—Ä–∞–±–æ—Ç–∞": "–§—É, –Ω–µ –º–∞—Ç–µ—Ä–∏—Å—å! ü§¢",
    "—É—Ç—Ä–æ": "–£—Ç—Ä–æ –±—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–±–µ–¥–∞. üåû"
}


# üé± 8ball
@dp.message_handler(commands=["8ball"])
async def magic8ball(message: types.Message):
    await message.reply(random.choice(answers))

# üåÄ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∏–∫–Ω–µ–π–º–æ–≤
@dp.message_handler(commands=["nick"])
async def nickname(message: types.Message):
    await message.reply(f"–¢–≤–æ–π –Ω–æ–≤—ã–π –Ω–∏–∫: {random.choice(nicknames)}")

# ‚≠ê –û—á–∫–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
@dp.message_handler(lambda m: "+1" in m.text or "-1" in m.text)
async def reputation_handler(message: types.Message):
    words = message.text.split()
    if len(words) >= 2:
        user = words[1]
        change = 1 if "+1" in message.text else -1
        reputation[user] = reputation.get(user, 0) + change
        await message.reply(f"{user} —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç {reputation[user]} –æ—á–∫–æ–≤ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏!")

# üó£Ô∏è –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–ª–æ–≤–∞
@dp.message_handler()
async def reactions_handler(message: types.Message):
    for word, reply in reactions.items():
        if word in message.text.lower():
            await message.reply(reply)
            break


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
